#!/bin/bash 
path=$(pwd)




function BINUTILS(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 


cd $path/sources
tar -xvf binutils-2.40.tar.xz
cd $path/sources/binutils-2.40

../configure --prefix=$LFS/tools \
 --with-sysroot=$LFS \
 --target=$LFS_TGT \
 --disable-nls \
 --enable-gprofng=no \
 --disable-werror
make
make install

cd ..
rm -rf binutils-2.40
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt


}





function GCC(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources
tar -xvf gcc-12.2.0.tar.xz
cd $path/sources/gcc-12.2.0



tar -xf $path/sources/mpfr-4.2.0.tar.xz
mv -v mpfr-4.2.0 mpfr
tar -xf $path/sources/gmp-6.2.1.tar.xz
mv -v gmp-6.2.1 gmp
tar -xf $path/sources/mpc-1.3.1.tar.gz
mv -v mpc-1.3.1 mpc
case $(uname -m) in
x86_64)
sed -e '/m64=/s/lib64/lib/' \
-i.orig gcc/config/i386/t-linux64
;;
esac

cd $path/sources/gcc-12.2.0

mkdir -v build
cd build

../configure \
 --target=$LFS_TGT \
 --prefix=$LFS/tools \
 --with-glibc-version=2.37 \
 --with-sysroot=$LFS \
 --with-newlib \
 --without-headers \
 --enable-default-pie \
 --enable-default-ssp \
 --disable-nls \
 --disable-shared \
 --disable-multilib \
 --disable-threads \
 --disable-libatomic \
 --disable-libgomp \
 --disable-libquadmath \
 --disable-libssp \
 --disable-libvtv \
 --disable-libstdcxx
make install
cd ..
cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
`dirname $($LFS_TGT-gcc -print-libgcc-file-name)`/install-tools/include/limits.h
rm -rf $path/sources/gcc-12.2.0
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}









function API(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources

tar -xvf linux-6.1.11.tar.xz 

cd $path/sources/linux-6.1.11

make mrproper
make headers
find usr/include -type f ! -name '*.h' -delete
cp -rv usr/include $LFS/usr
rm -rf $path/sources/linux-6.1.11
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}







#glib Install

function GLIB(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources 
tar -xvf glibc-2.37.tar.xz
case $(uname -m) in
i?86)
ln -sfv ld-linux.so.2 $LFS/lib/ld-lsb.so.3
;;
x86_64) ln -sfv ../lib/ld-linux-x86-64.so.2 $LFS/lib64
ln -sfv ../lib/ld-linux-x86-64.so.2 $LFS/lib64/ld-lsb-x86-64.so.3
;;
esac
cd glibc-2.37
patch -Np1 -i ../glibc-2.37-fhs-1.patch
mkdir -v build
cd build
echo "rootsbindir=/usr/sbin" > configparms
../configure \
 --prefix=/usr \
 --host=$LFS_TGT \
 --build=$(../scripts/config.guess) \
  --enable-kernel=3.2 \
 --with-headers=$LFS/usr/include \
 libc_cv_slibdir=/usr/lib
make
make DESTDIR=$LFS install
sed '/RTLDLIST=/s@/usr@@g' -i $LFS/usr/bin/ldd
echo 'int main(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 
}' | $LFS_TGT-gcc -xc -
readelf -l a.out | grep ld-linux
rm -v a.out
$LFS/tools/libexec/gcc/$LFS_TGT/12.2.0/install-tools/mkheaders
cd $path/sources/
rm -rf glibc-2.37
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}







function LIBSTDC(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources
tar -xvf gcc-12.2.0.tar.xz
cd $path/sources/gcc-12.2.0
mkdir -v build
cd build
../libstdc++-v3/configure \
 --host=$LFS_TGT \
 --build=$(../config.guess) \
 --prefix=/usr \
 --disable-multilib \
 --disable-nls \
 --disable-libstdcxx-pch \
 --with-gxx-include-dir=/tools/$LFS_TGT/include/c++/12.2.0

make
make DESTDIR=$LFS install
rm -v $LFS/usr/lib/lib{stdc++,stdc++fs,supc++}.la
rm -rf $path/source/gcc-12.2.0
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}





function M4(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources
tar -xvf m4-1.4.19.tar.xz
cd m4-1.4.19
./configure --prefix=/usr \
 --host=$LFS_TGT \
 --build=$(build-aux/config.guess)
make
make DESTDIR=$LFS install
cd $path/sources
rm -rf m4-1.4.19
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}




function NCURSES(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources
tar -xvf ncurses-6.4.tar.gz
cd $path/sources/ncurses-6.4
sed -i s/mawk// configure
mkdir build
pushd build
../configure
make -C include
make -C progs tic
popd
./configure --prefix=/usr \
 --host=$LFS_TGT \
 --build=$(./config.guess) \
 --mandir=/usr/share/man \
 --with-manpage-format=normal \
 --with-shared \
 --without-normal \
 --with-cxx-shared \
 --without-debug \
 --without-ada \
 --disable-stripping \
 --enable-widec
make
make DESTDIR=$LFS TIC_PATH=$(pwd)/build/progs/tic install
echo "INPUT(-lncursesw)" > $LFS/usr/lib/libncurses.so
cd $path/sources
rm -rf $path/sources/ncurses-6.4
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}





function BASH(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources
tar -xvf bash-5.2.15.tar.gz  
cd $path/sources/bash-5.2.15
./configure --prefix=/usr \
 --build=$(sh support/config.guess) \
 --host=$LFS_TGT \
 --without-bash-malloc
make
make DESTDIR=$LFS install
ln -sv bash $LFS/bin/sh
rm -rf $path/sources/bash-5.2.15 
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}





# coreutils install 
function COREUTILS (){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources
tar -xvf coreutils-9.1.tar.xz
cd $path/sources/coreutils-9.1
./configure --prefix=/usr \
 --host=$LFS_TGT \
 --build=$(build-aux/config.guess) \
 --enable-install-program=hostname \
 --enable-no-install-program=kill,uptime
make
make DESTDIR=$LFS install
mv -v $LFS/usr/bin/chroot $LFS/usr/sbin
mkdir -pv $LFS/usr/share/man/man8
mv -v $LFS/usr/share/man/man1/chroot.1 $LFS/usr/share/man/man8/chroot.8
sed -i 's/"1"/"8"/' $LFS/usr/share/man/man8/chroot.8
rm -rf $path/sources/coreutils-9.1
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}




function DIFFUTILS(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources
tar -xvf diffutils-3.9.tar.xz
cd $path/sources/diffutils-3.9
./configure --prefix=/usr --host=$LFS_TGT
make
make DESTDIR=$LFS install
rm -rf $path/sources/diffutils-3.9
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}






function  FILE(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources
   tar -xvf file-5.44.tar.gz
   cd $path/sources/file-5.44
   mkdir build
pushd build
../configure --disable-bzlib \
 --disable-libseccomp \
 --disable-xzlib \
 --disable-zlib
make
popd
./configure --prefix=/usr --host=$LFS_TGT --build=$(./config.guess)
make FILE_COMPILE=$(pwd)/build/src/file
make DESTDIR=$LFS install
rm -v $LFS/usr/lib/libmagic.la
rm -rf $path/sources/file-5.44
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}





function FINDUTILS(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources 
tar -xvf findutils-4.9.0.tar.xz
cd $path/sources/findutils-4.9.0
./configure --prefix=/usr \
 --localstatedir=/var/lib/locate \
 --host=$LFS_TGT \
 --build=$(build-aux/config.guess)
make
make DESTDIR=$LFS install
rm -rf $path/sources/file-5.44
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}



function GAWK (){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources/
tar -xvf gawk-5.2.1.tar.xz
cd $path/sources/gawk-5.2.1
sed -i 's/extras//' Makefile.in
./configure --prefix=/usr \
 --host=$LFS_TGT \
 --build=$(build-aux/config.guess)
make
make DESTDIR=$LFS install
rm -rf $path/sources/gawk-5.2.1
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}




function GREP(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources/ 
tar -xvf grep-3.8.tar.xz
cd $path/sources/grep-3.8
./configure --prefix=/usr \
 --host=$LFS_TGT
make
make DESTDIR=$LFS install
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}




function GZIP(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

  cd $path/sources/ 
  tar -xvf $path/sources/gzip-1.12.tar.xz
  cd $path/sources/gzip-1.12

  ./configure --prefix=/usr --host=$LFS_TGT
  
make
make DESTDIR=$LFS install
rm -rf $path/sources/gzip-1.12
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}




function MAKE (){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

  cd $path/sources/
  tar -xvf make-4.4.tar.gz
  cd make-4.4 
  sed -e '/ifdef SIGPIPE/,+2 d' \
 -e '/undef FATAL_SIG/i FATAL_SIG (SIGPIPE);' \
 -i src/main.c
./configure --prefix=/usr \
 --without-guile \
 --host=$LFS_TGT \
 --build=$(build-aux/config.guess)
make
make DESTDIR=$LFS install
rm -rf $path/sources/make-4.4
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}



function PATH(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

  cd $path/sources/
  tar -xvf patch-2.7.6.tar.xz
./configure --prefix=/usr \
 --host=$LFS_TGT \
 --build=$(build-aux/config.guess)
make
make DESTDIR=$LFS install
rm -rf $path/sources/patch-2.7.6
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}




function SED(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 


cd $path/sources/
tar -xvf sed-4.9.tar.xz 
cd sed-4.9
./configure --prefix=/usr \
 --host=$LFS_TGT
make
make DESTDIR=$LFS install
rm -rf path/sources/sed-4.9 
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}

function TAR() {
cd $path/sources/
tar -xvf tar-1.34.tar.xz
cd $path/sources/tar-1.34
./configure --prefix=/usr \
 --host=$LFS_TGT \
 --build=$(build-aux/config.guess)
make
make DESTDIR=$LFS install
rm -rf $path/sources/tar-1.34
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}

function XZ(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources/
tar -xvf xz-5.4.1.tar.xz
cd xz-5.4.1
./configure --prefix=/usr \
 --host=$LFS_TGT \
 --build=$(build-aux/config.guess) \
 --disable-static \
 --docdir=/usr/share/doc/xz-5.4.1
make
make DESTDIR=$LFS install
rm -v $LFS/usr/lib/liblzma.la
rm -rf $path/sources/xz-5.4.1
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}

function BINUTILS_PASS2(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources/
tar -xvf binutils-2.40.tar.xz
cd $path/sources/binutils-2.40
sed '6009s/$add_dir//' -i ltmain.sh
mkdir -v build
cd build
../configure \
 --prefix=/usr \
 --build=$(../config.guess) \
 --host=$LFS_TGT \
 --disable-nls \
 --enable-shared \
 --enable-gprofng=no \
 --disable-werror \
 --enable-64-bit-bfd
make
make DESTDIR=$LFS install
rm -v $LFS/usr/lib/lib{bfd,ctf,ctf-nobfd,opcodes}.{a,la}
rm -rf $path/sources/binutils-2.40$path/sources/binutils-2.40
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}



function GCC_PASS2(){ 
S1=$(date +%S ) 
h1=$(date +%H ) 
M1=$(date +%M ) 

cd $path/sources/
tar -xvf gcc-12.2.0.tar.xz
cd $path/sources/gcc-12.2.0
tar -xf ../mpfr-4.2.0.tar.xz
mv -v mpfr-4.2.0 mpfr
tar -xf ../gmp-6.2.1.tar.xz
mv -v gmp-6.2.1 gmp
tar -xf ../mpc-1.3.1.tar.gz
mv -v mpc-1.3.1 mpc
case $(uname -m) in
x86_64)
sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64
;;
esac
sed '/thread_header =/s/@.*@/gthr-posix.h/' \
-i libgcc/Makefile.in libstdc++-v3/include/Makefile.in
mkdir -v build
cd build
../configure 
--build=$(../config.guess)
--host=$LFS_TGT
--target=$LFS_TGT
LDFLAGS_FOR_TARGET=-L$PWD/$LFS_TGT/libgcc
--prefix=/usr
--with-build-sysroot=$LFS
--enable-default-pie
--enable-default-ssp
--disable-nls
--disable-multilib
--disable-libatomic
--disable-libgomp
--disable-libquadmath
--disable-libssp
--disable-libvtv
--enable-languages=c,c++
make
make DESTDIR=$LFS install
ln -sv gcc $LFS/usr/bin/cc
rm -rf $path/sources/gcc-12.2.0
h2=$(date +%H ) 
M2=$(date +%M ) 
S2=$(date +%S ) 
echo "${FUNCNAME[0]} is finished $((h1-h2))hour $((M1-M2))minutes $((S1- S2 ))seconds" >> $path/finish.txt

}